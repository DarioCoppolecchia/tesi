# paths of files to write and read from
[Files]
path_of_file_input = ../logs/tuesday/conn_labeled.log
path_of_file_xes = ../logs/tuesday/conn.xes

# filters to apply to lines read from log files
[Filters]
# strings to be filtered out
strings_to_filter_event = 'SaveConn::','(empty)','connection.'

[Discretization]
# the discretization to apply (equal_frequency | equal_width)
discretization_type = equal_frequency

[Attributes]
# list of the attributes to discretize
attributes_to_discretize = duration,orig_bytes,resp_bytes,missed_bytes,orig_pkts,orig_ip_bytes,resp_pkts,resp_ip_bytes,orig_syn,orig_fin,orig_syn_ack,orig_rst,resp_syn,resp_fin,resp_syn_ack,resp_rst,orig_bad_checksum,orig_content_gap,orig_retransmitted_payload,orig_zero_window,resp_bad_checksum,resp_content_gap,resp_retransmitted_payload,resp_zero_window
# number of bins for each attribute (same order as the prev list)
n_bins = 10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10
# list of the attributes to convert di xes
attributes_to_xes = ts,service,duration,orig_bytes,resp_bytes,conn_state,missed_bytes,history,orig_pkts,orig_ip_bytes,resp_pkts,resp_ip_bytes

[Print]
# number of traces to print after discretization
n_trace_to_print = 10
# (boolean) true if the traces to print will be picked at random from the network traffic analyzer
randomize_print = 1